dim(fullLearning2014)
internetAddress <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
fullLearning2014 <- read.csv(internetAddress, sep = "\t", header = T)
str(fullLearning2014)
dim(fullLearning2014)
#store internet address to variable
internetAddress <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
#load data, it actually has tab separated values so that is taken into account
fullLearning2014 <- read.csv(internetAddress, sep = "\t", header = T)
#check structure and that everything is fine
str(fullLearning2014)
dim(fullLearning2014)
#Dimensions are 183 and 60 which means 60 variables with 183
#rows (persons)
#All variables are int (numbers) except for gender which is
# 2 level factor for males ("M")and females ("F")
#install needed packages by uncommenting lower line
#install.packages("dplyr")
#call needed libraries
library(dplyr)
#needed variables stored to memoery which are ready
ready_variables <- c("gender", "Points", "Attitude", "Age")
#new dataset with ready variables.
learning2014 <- select(fullLearning2014, one_of(ready_variables))
#check it's correctly selected
summary(learning2014)
str(learning2014)
#pick the right question for making variables
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#making the 'deep' variable
deep_columns <- select(fullLearning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
#making the 'surf' variable
surface_columns <- select(fullLearning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
#making the 'stra' variable
stra_columns <- select(fullLearning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(stra_columns)
#delete everyone with 0 in points variable
learning2014 <- filter(learning2014, Points > 0)
#check new dataset for problems
str(learning2014)
summary(learning2014)
# ---> looks fine =)
#set working directory to the right one
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
getwd()
#write our learning2014 dataset to the data folder of our working directory
write.csv(learning2014, file = "data/learning2014")
#test to see if reading works also correctly. Needed to correct that first row is not variable
# thus 'row.names = 1'
readTestLearning2014 <- read.csv(file = "data/learning2014", row.names = 1)
str(readTestLearning2014)
head(readTestLearning2014)
#everything's correct
head(readTestLearning2014)
str(readTestLearning2014)
readTestLearning2014 <- read.csv(file = "data/learning2014", row.names = 1)
str(readTestLearning2014)
learning2014$attitude <- fullLearning2014$Attitude / 10
#store internet address to variable
internetAddress <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
#load data, it actually has tab separated values so that is taken into account
fullLearning2014 <- read.csv(internetAddress, sep = "\t", header = T)
#check structure and that everything is fine
str(fullLearning2014)
dim(fullLearning2014)
#Dimensions are 183 and 60 which means 60 variables with 183
#rows (persons)
#All variables are int (numbers) except for gender which is
# 2 level factor for males ("M")and females ("F")
#install needed packages by uncommenting lower line
#install.packages("dplyr")
#call needed libraries
library(dplyr)
#needed variables stored to memoery which are ready
ready_variables <- c("gender", "Points", "Attitude", "Age")
#new dataset with ready variables.
learning2014 <- select(fullLearning2014, one_of(ready_variables))
#check it's correctly selected
summary(learning2014)
str(learning2014)
#pick the right question for making variables
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#making the 'deep' variable
deep_columns <- select(fullLearning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
#making the 'surf' variable
surface_columns <- select(fullLearning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
#making the 'stra' variable
stra_columns <- select(fullLearning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(stra_columns)
#adjust Attitude by scaling with number of questions
#also checked to be correct with dataset provided by course TA's
learning2014$attitude <- fullLearning2014$Attitude / 10
#delete everyone with 0 in points variable
learning2014 <- filter(learning2014, Points > 0)
#check new dataset for problems
str(learning2014)
summary(learning2014)
# ---> looks fine =)
#set working directory to the right one
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
getwd()
#write our learning2014 dataset to the data folder of our working directory
write.csv(learning2014, file = "data/learning2014")
#test to see if reading works also correctly. Needed to correct that first row is not variable
# thus 'row.names = 1'
readTestLearning2014 <- read.csv(file = "data/learning2014", row.names = 1)
str(readTestLearning2014)
head(readTestLearning2014)
#everything's correct
str(fullLearning2014)
str(learning2014)
learning2014 <- select(fullLearning2014, one_of(ready_variables))
library(dplyr)
install.packages("dplyr")
#store internet address to variable
internetAddress <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
#load data, it actually has tab separated values so that is taken into account
fullLearning2014 <- read.csv(internetAddress, sep = "\t", header = T)
#check structure and that everything is fine
str(fullLearning2014)
dim(fullLearning2014)
#Dimensions are 183 and 60 which means 60 variables with 183
#rows (persons)
#All variables are int (numbers) except for gender which is
# 2 level factor for males ("M")and females ("F")
#install needed packages by uncommenting lower line
install.packages("dplyr")
#call needed libraries
library(dplyr)
#needed variables stored to memoery which are ready
ready_variables <- c("gender", "Points", "Attitude", "Age")
#new dataset with ready variables.
learning2014 <- select(fullLearning2014, one_of(ready_variables))
#check it's correctly selected
summary(learning2014)
str(learning2014)
#pick the right question for making variables
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#making the 'deep' variable
deep_columns <- select(fullLearning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
#making the 'surf' variable
surface_columns <- select(fullLearning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
#making the 'stra' variable
stra_columns <- select(fullLearning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(stra_columns)
#adjust Attitude by scaling with number of questions
#also checked to be correct with dataset provided by course TA's
learning2014$attitude <- fullLearning2014$Attitude / 10
#delete everyone with 0 in points variable
learning2014 <- filter(learning2014, Points > 0)
#check new dataset for problems
str(learning2014)
summary(learning2014)
# ---> looks fine =)
#set working directory to the right one
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
getwd()
#write our learning2014 dataset to the data folder of our working directory
write.csv(learning2014, file = "data/learning2014")
#test to see if reading works also correctly. Needed to correct that first row is not variable
# thus 'row.names = 1'
readTestLearning2014 <- read.csv(file = "data/learning2014", row.names = 1)
str(readTestLearning2014)
head(readTestLearning2014)
#everything's correct
str(learning2014)
summary(learning2014)
learning2014$attitude <- fullLearning2014$Attitude / 10
learning2014$attitude <- learning2014$attitude / 10
str(learning2014)
learning2014$attitude <- learning2014$attitude / 10
str(learning2014)
#store internet address to variable
internetAddress <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
#load data, it actually has tab separated values so that is taken into account
fullLearning2014 <- read.csv(internetAddress, sep = "\t", header = T)
#check structure and that everything is fine
str(fullLearning2014)
dim(fullLearning2014)
#Dimensions are 183 and 60 which means 60 variables with 183
#rows (persons)
#All variables are int (numbers) except for gender which is
# 2 level factor for males ("M")and females ("F")
#install needed packages by uncommenting lower line
#install.packages("dplyr")
#call needed libraries
library(dplyr)
#needed variables stored to memoery which are ready
ready_variables <- c("gender", "Points", "Attitude", "Age")
#new dataset with ready variables.
learning2014 <- select(fullLearning2014, one_of(ready_variables))
#check it's correctly selected
summary(learning2014)
str(learning2014)
#pick the right question for making variables
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#making the 'deep' variable
deep_columns <- select(fullLearning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
#making the 'surf' variable
surface_columns <- select(fullLearning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
#making the 'stra' variable
stra_columns <- select(fullLearning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(stra_columns)
#adjust Attitude by scaling with number of questions
#also checked to be correct with dataset provided by course TA's
learning2014$attitude <- learning2014$attitude / 10
#delete everyone with 0 in points variable
learning2014 <- filter(learning2014, Points > 0)
#check new dataset for problems
str(learning2014)
summary(learning2014)
# ---> looks fine =)
#set working directory to the right one
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
getwd()
#write our learning2014 dataset to the data folder of our working directory
write.csv(learning2014, file = "data/learning2014")
#test to see if reading works also correctly. Needed to correct that first row is not variable
# thus 'row.names = 1'
readTestLearning2014 <- read.csv(file = "data/learning2014", row.names = 1)
str(readTestLearning2014)
head(readTestLearning2014)
#everything's correct
str(learning2014)
summary(learning2014)
learning2014$Attitude <- learning2014$Attitude / 10
str(learning2014)
summary(learning2014)
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
learning2014 <- read.csv(file ="data/learning2014", row.names = 1)
str(learning2014)
#store internet address to variable
internetAddress <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
#load data, it actually has tab separated values so that is taken into account
fullLearning2014 <- read.csv(internetAddress, sep = "\t", header = T)
#check structure and that everything is fine
str(fullLearning2014)
dim(fullLearning2014)
#Dimensions are 183 and 60 which means 60 variables with 183
#rows (persons)
#All variables are int (numbers) except for gender which is
# 2 level factor for males ("M")and females ("F")
#install needed packages by uncommenting lower line
#install.packages("dplyr")
#call needed libraries
library(dplyr)
#needed variables stored to memoery which are ready
ready_variables <- c("gender", "Points", "Attitude", "Age")
#new dataset with ready variables.
learning2014 <- select(fullLearning2014, one_of(ready_variables))
#check it's correctly selected
summary(learning2014)
str(learning2014)
#pick the right question for making variables
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#making the 'deep' variable
deep_columns <- select(fullLearning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
#making the 'surf' variable
surface_columns <- select(fullLearning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
#making the 'stra' variable
stra_columns <- select(fullLearning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(stra_columns)
#adjust Attitude by scaling with number of questions
#also checked to be correct with dataset provided by course TA's
learning2014$Attitude <- learning2014$Attitude / 10
#delete everyone with 0 in points variable
learning2014 <- filter(learning2014, Points > 0)
#check new dataset for problems
str(learning2014)
summary(learning2014)
# ---> looks fine =)
#set working directory to the right one
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
getwd()
#write our learning2014 dataset to the data folder of our working directory
write.csv(learning2014, file = "data/learning2014")
#test to see if reading works also correctly. Needed to correct that first row is not variable
# thus 'row.names = 1'
readTestLearning2014 <- read.csv(file = "data/learning2014", row.names = 1)
str(readTestLearning2014)
head(readTestLearning2014)
#everything's correct
# Chapter2 Analysis part
##1
###reading the data from the local folder
```{r reading the data}
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
learning2014 <- read.csv(file ="data/learning2014", row.names = 1)
str(learning2014)
```
setwd("C:/Users//Julius//yliopisto//kansis//datascience//IODS-project")
learning2014 <- read.csv(file ="data/learning2014", row.names = 1)
str(learning2014)
install.packages("GGally")
library(GGally)
library(GGally)
ggpairs(learning2014)
ggpairs(learning2014)
summary(learning2014)
ggpairs(learning2014, bins=10)
ggpairs(learning2014)
ggpairs(learning2014)
summary(learning2014, warning = F, message = F, error = F)
summary(learning2014)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + surf + gender)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + surf + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + age + stra)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + Age + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + surf + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + deep + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ surf + deep + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + deep + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + Age + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + Age + deep)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + Age + stra)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + Age + surf)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + Age + gender)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + deeo + gender)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + deep + gender)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + stra + gender)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + surf + gender)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + deep + surf)
summary(fit.model1)
fit.model1 <- lm(data = learning2014, Points ~ Attitude + deep + stra)
summary(fit.model1)
fit.model2 <- lm(data=learning2014, Points ~ Attitude + stra)
summary(fit.model2)
fit.model2 <- lm(data=learning2014, Points ~ Attitude)
summary(fit.model2)
par(mfrow = c(2,2))
plot(fit.model2, which = c(1,2,5))
